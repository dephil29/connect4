1. How do we measure the length of the critical rendering path? (10 pts)

i. The number of server round trips your page must do in order to fully load and render <----this one
ii. The number of actions the browser must take (eg run js, build cssom, build dom, etc) in order to fully load and render your page
iii. By counting the number of all external resources that must be loaded
iv. By counting the number of render-blocking external resources that must be loaded

2.What are the events in the Timeline pane which show the DOM being built, the CSSOM being built, and the render tree being built? (10 pts)

i. Parse HTML, Parse CSS, Layout <----this one
ii. Parse HTML, Recalculate Style, Layout
iii. Parse HTML, Recalculate Style, Paint

3. What is the render tree? (10 pts)

    the nodes required to render the page

4. What are three things you can do in order to speed up a website's load time? (10 pts)

    1. minimize the number of critical resources
    2. minimize the number of critical bytes to reduce download time
    3. optimize the order in which the remaining critical resources are loaded

5. What is the name of the Google tool you can use to see a list of things you can do to improve your page's load speed? (10 pts)

    timeline

6. What is the purpose of including multiple <source> elements within a single <video> element?

    to ensure that the video plays in as many browsers as possible

7. Use browserify to bundle all the files in the following project: https://github.com/Swolebrain/connect4
Setup Steps:

i. Fork the project by going to the above link and clicking "Fork" near the top right of the screen DONE
ii. The project will now have a copy in your own github page. Clone it from there. DONE
iii. In your computer, initialize this folder as a node project. DONE
iv. Install browserify, make sure it's saved as a development dependency in package.json DONE
v. Split out the code from the createTable function and the isLegitEdge function into separate files. Make sure each function has its own file. DONE
vi. Back in your main file, require the contents of your two new files DONE
vii. Create an npm script to use browserify to create a javascript bundle (one single file containing all your JS).
viii. Do anything else you need to do in order to get the bundle working and test your site.
ix. Before submitting, ensure your code is browserified. If the first line is not a long, minified function then you did it wrong.
x. Commit and push to github
xi. Upload the game to yourname.fvi-grad.com

8. Bonus points: Produce a minified bundle for the exercise above using uglifyjs.
